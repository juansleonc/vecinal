services:
  db:
    image: postgres:15-alpine
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    env_file:
      - ./.env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  legacy:
    build:
      context: ./apps/legacy-rails
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      RAILS_ENV: ${RAILS_ENV:-development}
      DB_HOST: ${LEGACY_DB_HOST:-db}
      DB_NAME: ${LEGACY_DB_NAME:-condo_new}
      DB_USER: ${LEGACY_DB_USER:-postgres}
      DB_PASSWORD: ${LEGACY_DB_PASSWORD:-postgres}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    volumes:
      - ./apps/legacy-rails:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "3000:3000"
    command: bundle exec rails s -b 0.0.0.0 -p 3000

  api:
    build:
      context: ./apps/api-next-ruby
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      RAILS_ENV: ${RAILS_ENV:-development}
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/vecinal_api}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    volumes:
      - ./apps/api-next-ruby:/rails
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "4000:4000"
    command: ./bin/rails s -b 0.0.0.0 -p 4000

volumes:
  db_data:
  redis_data:
